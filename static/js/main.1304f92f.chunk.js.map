{"version":3,"sources":["components/Title.js","components/Form.js","components/Weather.js","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","className","Form","props","onSubmit","getWeather","type","name","placeholder","Weather","city","country","temperature","humidity","description","error","API_KEY","App","state","undefined","_callee","e","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","sent","json","console","log","_this","setState","main","temp","sys","weather","stop","components_Title","components_Form","this","components_Weather","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1304f92f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Title = ()=> (\r\n\t<div>\r\n    <h1 className=\"title-container__title\">Weather Finder</h1>\r\n     <h3 className=\"title-container__subtitle\">Find out temperature, conditions and more.....</h3>\r\n     </div>)\r\n\r\n\r\nexport default Title; ","import React from \"react\";\r\n\r\nconst Form = props =>\r\n\r\n(\r\n\r\n<form onSubmit={props.getWeather}>\r\n<input type=\"text\" name=\"city\" placeholder=\"City...\"/>\r\n<input type=\"text\" name=\"country\" placeholder=\"Country...\"/>\r\n<button>Get Weather</button>\r\n\r\n</form>\r\n);\r\n\r\n\r\nexport default Form; ","import React from \"react\";\r\n\r\nconst Weather = props =>(\r\n\r\n<div className=\"weather__info\">\r\n\r\n{\r\n    props.city && props.country && <p className=\"weather__key\">Location :\r\n    <span className=\"weather__value\"> {props.city} , {props.country}</span>\r\n    \r\n    </p>\r\n}\r\n{\r\n    props.temperature && <p className=\"weather__key\">Temperature :\r\n    <span  className=\"weather__value\"> {props.temperature}</span>\r\n    </p>\r\n}\r\n{\r\n    props.humidity && <p className=\"weather__key\">Humidity :\r\n<span className=\"weather__value\"> {props.humidity}</span>\r\n\r\n    </p>\r\n}\r\n{\r\n    props.description && <p className=\"weather__key\">Conditions :\r\n    \r\n    <span  className=\"weather__value\"> {props.description}</span>\r\n   </p>\r\n}\r\n{\r\n    props.error && <p  className=\"weather__error\">{props.error}</p>\r\n    }\r\n\r\n\r\n</div>\r\n);\r\n\r\n\r\n\r\n\r\n\r\nexport default Weather; ","import React from \"react\";\r\nimport Title from\"./components/Title\";\r\nimport Form from\"./components/Form\";\r\nimport Weather from\"./components/Weather\";\r\nconst API_KEY =\"3680184c792f61b3eacbef73c2a47900\"\r\nclass App extends React.Component{\r\nstate ={\r\ntemperature: undefined,\r\ncity: undefined,\r\ncountry: undefined,\r\nhumidity: undefined,\r\ndescription: undefined,\r\nerror: undefined,\r\n}\r\ngetWeather= async (e) => {\r\ne.preventDefault() ;\r\nconst city = e.target.elements.city.value;\r\nconst country = e.target.elements.country.value;\r\nconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}&units=metric`);\r\nconst data=await api_call.json();\r\n\r\nif(city&& country) {\r\nconsole.log(data);\r\n\r\nthis.setState({\r\ntemperature: data.main.temp,\r\ncity: data.name,\r\ncountry: data.sys.country,\r\nhumidity: data.main.humidity,\r\ndescription: data.weather[0].description,\r\nerror: \"\" \r\n});\r\n\r\n}\r\nelse{\r\nthis.setState({\r\ntemperature: undefined,\r\ncity: undefined,\r\ncountry: undefined,\r\nhumidity: undefined,\r\ndescription: undefined,\r\nerror: \"Please Enter Country and City\" \r\n})\r\n\r\n}\r\n}\r\n\r\nrender(){\r\nreturn(\r\n<div>\r\n<div className=\"wrapper\">\r\n<div className=\"main\">\r\n<div className=\"container\">\r\n<div className=\"row\">\r\n<div className=\"col-xs-5 title-container\">\r\n<Title />\r\n</div>\r\n<div className=\"col-xs-7 form-container\">\r\n<Form getWeather={this.getWeather}/>\r\n<Weather \r\ntemperature={this.state.temperature}\r\ncity={this.state.city}\r\ncountry={this.state.country}\r\nhumidity={this.state.humidity}\r\ndescription={this.state.description}\r\nerror={this.state.error}\r\n/>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n);\r\n}\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}